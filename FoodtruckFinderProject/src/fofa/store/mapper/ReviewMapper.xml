<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="fofa.store.mapper.ReviewMapper">
  	<resultMap type="Review" id="ReviewMap">
  		<id column="review_id" property="reviewId"/>
  		<result column="contents" property="contents"/>
  		<result column="score" property="score"/>
  		<result column="writedate" property="writeDate"/>
  		<association column="member_id" property="writer" 
	  	select = "fofa.store.mapper.MemberMapper.select"	
	  	javaType="Member" jdbcType="VARCHAR"/>
	  	<association column="foodtruck_id" property="foodtruck"
	  	select = "fofa.store.mapper.FoodtruckMapper.selectById"
	  	javaType="Foodtruck" jdbcType="VARCHAR"/>
	  	<collection property="images" column="review_id" ofType="Image"
	  	select = "fofa.store.mapper.ImageMapper.selectReviewImage"
	  	javaType="ArrayList" jdbcType="VARCHAR"/>
  	</resultMap>
  	
  	<insert id="insert" parameterType="Review">
  		INSERT INTO review_tb
  		VALUES ('R'||review_seq.nextval, #{writer.memberId}, #{foodtruck.foodtruckId}, #{contents}, #{score}, SYSDATE)
  	</insert>
  	<update id="update" parameterType="Review">
  		UPDATE review_tb
  		SET contents = #{contents} , score=#{score}
  		WHERE review_id = #{reviewId}
  	</update>
  	<delete id="delete" parameterType="String">
  		DELETE FROM review_tb
  		WHERE review_id = #{reviewId}
  	</delete>
  	<select id="selectById" parameterType="String" resultMap="ReviewMap">
  		SELECT review_id, member_id, foodtruck_id, contents, score, writedate
  		FROM review_tb
  		WHERE review_id = #{reviewId}
  	</select>
  	<select id="selectByMemberId" parameterType="String" resultMap="ReviewMap">
  		SELECT review_id, member_id, foodtruck_id, contents, score, writedate
  		FROM review_tb
  		WHERE member_id = #{writer.memberId}
  	</select>
   	<select id="selectByFromId" parameterType="String" resultMap="ReviewMap">
   		select * from (
  		SELECT review_id, member_id, foodtruck_id, contents, score, writedate
  		FROM review_tb
  		WHERE member_id in (select to_id from follow_tb where from_id = #{fromId})
		order by writedate desc
		) where rownum <![CDATA[ <= ]]> 20 
  	</select>
  	<select id="selectByTruckId" parameterType="String" resultMap="ReviewMap">
  		SELECT review_id, member_id, foodtruck_id, contents, score, writedate
  		FROM review_tb
  		WHERE foodtruck_Id = #{foodtruck.foodtruckId}
  	</select>
  	<select id="selectByRecommand" resultMap="ReviewMap">
  		select * from (
  		select r.review_id review_id, member_id, foodtruck_id, contents, score, writedate 
  		from review_tb r LEFT OUTER JOIN (select review_id, count(*) recommand from recommand_tb group by review_id) d 
  		ON d.review_id = r.review_id
		order by recommand desc nulls last
		) where rownum <![CDATA[ <= ]]> 4
  	</select>
  	<select id = "avgScore" resultType="Double" parameterType="String">
  		select avg(score) from review_tb where foodtruck_Id = #{foodtruckId}
  	</select>
  	<select id = "selectTruckCount" resultType="int" parameterType="String">
  		select count(*) from review_tb where foodtruck_Id = #{foodtruckId}
  	</select>
  	 <select id = "selectMemberCount" resultType="int" parameterType="String">
  		select count(*)  reviewCount from review_tb where member_id = #{memberId}
  	</select>
  </mapper>